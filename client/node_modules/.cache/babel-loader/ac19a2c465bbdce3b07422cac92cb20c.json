{"ast":null,"code":"import _regeneratorRuntime from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCollecionsAsync),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCollectionsStart);\n\nimport { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from \"./shop.types\";\nexport function fetchCollecionsAsync() {\n  var collectionRef;\n  return _regeneratorRuntime.wrap(function fetchCollecionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log(\"I am fired\");\n\n        case 2:\n          collectionRef = firestore.collection(\"collections\");\n          collectionRef.get().then(function (snapshot) {\n            var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n          }).catch(function (error) {\n            return dispatch(fetchCollectionsFailure(error.message));\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollecionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/src/redux/shop/shop.sagas.js"],"names":["fetchCollecionsAsync","fetchCollectionsStart","takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":";;;;yBAMkBA,oB;;;yBAeDC,qB;;AArBjB,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,OAAOC,eAAP,MAA6B,cAA7B;AAGA,OAAO,SAAWL,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMM,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AADG;AAIGC,UAAAA,aAJH,GAImBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAJnB;AAKHD,UAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACI,UAAAC,QAAQ,EAAI;AACR,gBAAMC,cAAc,GAAIT,+BAA+B,CAACQ,QAAD,CAAvD;AACAE,YAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AAEH,WALL,EAMEG,KANF,CAMQ,UAAAC,KAAK;AAAA,mBAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAAZ;AAAA,WANb;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,OAAO,SAAUlB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACG,eAAe,CAACe,uBAAjB,EACXpB,oBADW,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from  \"./shop.types\";\n\n\nexport function*  fetchCollecionsAsync(){\n    yield console.log(\"I am fired\");\n\n        \n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(\n        snapshot => {\n            const collectionsMap =  convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n\n        }\n    ).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollecionsAsync);\n\n}\n"]},"metadata":{},"sourceType":"module"}