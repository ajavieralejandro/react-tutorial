{"ast":null,"code":"import _regeneratorRuntime from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyA5cFMfRj0MYKuYMjOVd8KOKBNB_o-cSfA\",\n  authDomain: \"crwn-db-66998.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-66998.firebaseio.com\",\n  projectId: \"crwn-db-66998\",\n  storageBucket: \"crwn-db-66998.appspot.com\",\n  messagingSenderId: \"317210629966\",\n  appId: \"1:317210629966:web:a6192da12373d3f7ffb01f\",\n  measurementId: \"G-BPEJHFL92X\"\n};\nfirebase.initializeApp(config);\nexport var createUserProfileDocument = function createUserProfileDocument(userAuth, additionalData) {\n  var userRef, snapShot, displayName, email, createdAt;\n  return _regeneratorRuntime.async(function createUserProfileDocument$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (userAuth) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(userRef.get());\n\n        case 5:\n          snapShot = _context.sent;\n\n          if (snapShot.exists) {\n            _context.next = 17;\n            break;\n          }\n\n          displayName = userAuth.displayName, email = userAuth.email;\n          createdAt = new Date();\n          _context.prev = 9;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(userRef.set(_objectSpread({\n            displayName: displayName,\n            email: email,\n            createdAt: createdAt\n          }, additionalData)));\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](9);\n          console.log('error creating user', _context.t0.message);\n\n        case 17:\n          return _context.abrupt(\"return\", userRef);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[9, 14]]);\n};\nexport var addCollectionAndDocuments = function addCollectionAndDocuments(collectionKey, objectsToAdd) {\n  var collectionRef, batch;\n  return _regeneratorRuntime.async(function addCollectionAndDocuments$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          collectionRef = firestore.collection(collectionKey);\n          batch = firestore.batch();\n          objectsToAdd.forEach(function (obj) {\n            var newDocRef = collectionRef.doc();\n            batch.set(newDocRef, obj);\n          });\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(batch.commit());\n\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  var transformedCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return transformedCollection.reduce(function (accumulator, collection) {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nexport var googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleProvider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\n\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyA5cFMfRj0MYKuYMjOVd8KOKBNB_o-cSfA\",\n  authDomain: \"crwn-db-66998.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-66998.firebaseio.com\",\n  projectId: \"crwn-db-66998\",\n  storageBucket: \"crwn-db-66998.appspot.com\",\n  messagingSenderId: \"317210629966\",\n  appId: \"1:317210629966:web:a6192da12373d3f7ffb01f\",\n  measurementId: \"G-BPEJHFL92X\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}