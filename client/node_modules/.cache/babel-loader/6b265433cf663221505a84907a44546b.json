{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\"; //THUNK DISPATCH\n//import thunk from 'redux-thunk';\n//Redux-saga\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [rootSaga]; //export const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga); //Solo lo inserto si estoy en modo de producción\n\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\nexport var persistor = persistStore(store); //export default { store, persistor };","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","run","process","env","NODE_ENV","push","persistor","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;AACA;AAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,IAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,IAAMG,WAAW,GAAG,CAACF,QAAD,CAApB,C,CACA;;AAEAC,cAAc,CAACE,GAAf,CAAmBH,QAAnB,E,CACA;;AACA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CJ,WAAW,CAACK,IAAZ,CAAiBV,MAAjB;AAE5C,OAAO,IAAMW,SAAS,GAAGZ,YAAY,CAACa,KAAD,CAA9B,C,CACP","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n//THUNK DISPATCH\n//import thunk from 'redux-thunk';\n\n//Redux-saga\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [rootSaga];\n//export const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n//Solo lo inserto si estoy en modo de producción\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\n\nexport const persistor = persistStore(store);\n//export default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}