{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\"; //THUNK DISPATCH\n//import thunk from 'redux-thunk';\n//Redux-saga\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [rootSaga];\nexport var store = createStore(rootReducer, {}, applyMiddleware.apply(void 0, middlewares));\nsagaMiddleware.run(rootSaga); //Solo lo inserto si estoy en modo de producción\n\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\nexport var persistor = persistStore(store);\nexport default {\n  store: store,\n  persistor: persistor\n};","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","store","run","process","env","NODE_ENV","push","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;AACA;AAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,IAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,IAAMG,WAAW,GAAG,CAACF,QAAD,CAApB;AACA,OAAO,IAAMG,KAAK,GAAGT,WAAW,CAACI,WAAD,EAAa,EAAb,EAAgBH,eAAe,MAAf,SAAmBO,WAAnB,CAAhB,CAAzB;AAEPD,cAAc,CAACG,GAAf,CAAmBJ,QAAnB,E,CACA;;AACA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CL,WAAW,CAACM,IAAZ,CAAiBX,MAAjB;AAE5C,OAAO,IAAMY,SAAS,GAAGb,YAAY,CAACO,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAK,EAALA,KAAF;AAASM,EAAAA,SAAS,EAATA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n//THUNK DISPATCH\n//import thunk from 'redux-thunk';\n\n//Redux-saga\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [rootSaga];\nexport const store = createStore(rootReducer,{},applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n//Solo lo inserto si estoy en modo de producción\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}