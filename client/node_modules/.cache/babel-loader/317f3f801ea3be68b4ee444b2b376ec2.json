{"ast":null,"code":"import _regeneratorRuntime from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCollecionsAsync),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCollectionsStart);\n\nimport { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function fetchCollecionsAsync() {\n  var collectionRef, snapshot, collectionsMap;\n  return _regeneratorRuntime.wrap(function fetchCollecionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log(\"I am fired\");\n\n        case 2:\n          collectionRef = firestore.collection(\"collections\");\n          _context.next = 5;\n          return collectionRef.get();\n\n        case 5:\n          snapshot = _context.sent;\n          _context.next = 8;\n          return call(convertCollectionsSnapshotToMap)(snapshot);\n\n        case 8:\n          collectionsMap = _context.sent;\n          collectionRef.get().then(function (snapshot) {\n            var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n          }).catch(function (error) {\n            return dispatch(fetchCollectionsFailure(error.message));\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollecionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/src/redux/shop/shop.sagas.js"],"names":["fetchCollecionsAsync","fetchCollectionsStart","takeEvery","call","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","console","log","collectionRef","collection","get","snapshot","collectionsMap","then","dispatch","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":";;;;yBAWkBA,oB;;;yBAkBDC,qB;;AA7BjB,SAAQC,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,OAAOC,eAAP,MAA6B,cAA7B;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAMA,OAAO,SAAWR,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMS,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AADG;AAIGC,UAAAA,aAJH,GAImBP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAJnB;AAAA;AAKc,iBAAMD,aAAa,CAACE,GAAd,EAAN;;AALd;AAKGC,UAAAA,QALH;AAAA;AAMoB,iBAAMX,IAAI,CAAEE,+BAAF,CAAJ,CAAuCS,QAAvC,CAAN;;AANpB;AAMGC,UAAAA,cANH;AAQHJ,UAAAA,aAAa,CAACE,GAAd,GAAoBG,IAApB,CACI,UAAAF,QAAQ,EAAI;AACR,gBAAMC,cAAc,GAAIV,+BAA+B,CAACS,QAAD,CAAvD;AACAG,YAAAA,QAAQ,CAACV,uBAAuB,CAACQ,cAAD,CAAxB,CAAR;AAEH,WALL,EAMEG,KANF,CAMQ,UAAAC,KAAK;AAAA,mBAAIF,QAAQ,CAACT,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ;AAAA,WANb;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAUnB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CAACI,eAAe,CAACe,uBAAjB,EACXrB,oBADW,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {takeEvery,call} from 'redux-saga/effects';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from  \"./shop.types\";\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from \"./shop.actions\";\n\n\nexport function*  fetchCollecionsAsync(){\n    yield console.log(\"I am fired\");\n\n        \n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call (convertCollectionsSnapshotToMap)(snapshot);\n    \n    collectionRef.get().then(\n        snapshot => {\n            const collectionsMap =  convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n\n        }\n    ).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollecionsAsync);\n\n}\n"]},"metadata":{},"sourceType":"module"}