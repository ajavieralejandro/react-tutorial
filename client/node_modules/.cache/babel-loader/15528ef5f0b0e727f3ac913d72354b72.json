{"ast":null,"code":"import _regeneratorRuntime from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(clearCartOnSignOut),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getFirebaseCart),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(onGetCart),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saveCart),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(catchSignOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(onSignOutSuccess),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(cartSagas);\n\nimport { all, call, takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport { clearCart } from './cart.actions';\nimport { getUserCart, writeUserCart } from '../../firebase/firebase.utils';\nimport { selectUserId, selectCurrentUser } from '../user/user.selectors';\nimport { selectCartItems } from './cart.selectors';\nimport { setUserCart } from './cart.actions';\nimport CartActionTypes from './cart.types';\nexport function clearCartOnSignOut() {\n  return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put(clearCart());\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getFirebaseCart(action) {\n  var _ref, cart;\n\n  return _regeneratorRuntime.wrap(function getFirebaseCart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return console.log(\"Estoy recibiendo como parametro : \", action);\n\n        case 2:\n          _context2.next = 4;\n          return getUserCart(action.payload);\n\n        case 4:\n          _ref = _context2.sent;\n          cart = _ref.cart;\n          console.log(\"Lo que estoy recibiendo como cart es : \", cart);\n          _context2.next = 9;\n          return put(setUserCart(cart));\n\n        case 9:\n          _context2.next = 11;\n          return console.log(\"termine mi operacion\");\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function onGetCart() {\n  var action;\n  return _regeneratorRuntime.wrap(function onGetCart$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(CartActionTypes.GET_CART_FROM_FIREBASE, getFirebaseCart);\n\n        case 2:\n          action = _context3.sent;\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function saveCart() {\n  var user, cart, toAdd;\n  return _regeneratorRuntime.wrap(function saveCart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"Quiero ver si llego a saveCart\");\n          _context4.next = 3;\n          return selectCartItems();\n\n        case 3:\n          user = _context4.sent;\n          console.log(\"Estoy recibiendo como userid : \", user);\n          cart = selectCartItems();\n          console.log(\"Estoy recibiendo como carro : \", cart);\n          toAdd = {\n            cart: cart,\n            id: user.id\n          };\n          console.log(\"Estoy por insertar\", toAdd);\n          writeUserCart(user.id, toAdd);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function catchSignOut(action) {\n  return _regeneratorRuntime.wrap(function catchSignOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log(\"Estoy agarrando bien esto\"); //Tengo que grabar en la base de datos los datos del carrito...\n\n          _context5.next = 3;\n          return saveCart();\n\n        case 3:\n          _context5.next = 5;\n          return clearCartOnSignOut();\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function onSignOutSuccess() {\n  return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, catchSignOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function cartSagas() {\n  return _regeneratorRuntime.wrap(function cartSagas$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([call(onSignOutSuccess), call(onGetCart)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","getFirebaseCart","onGetCart","saveCart","catchSignOut","onSignOutSuccess","cartSagas","all","call","takeLatest","put","UserActionTypes","clearCart","getUserCart","writeUserCart","selectUserId","selectCurrentUser","selectCartItems","setUserCart","CartActionTypes","action","console","log","payload","cart","GET_CART_FROM_FIREBASE","user","toAdd","id","SIGN_OUT_SUCCESS"],"mappings":"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","sourcesContent":["import {all, call,takeLatest, put} from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport {clearCart} from './cart.actions';\nimport {getUserCart,writeUserCart} from '../../firebase/firebase.utils';\nimport {selectUserId,selectCurrentUser} from '../user/user.selectors';\nimport {selectCartItems} from './cart.selectors';\nimport {setUserCart} from './cart.actions';\nimport CartActionTypes from './cart.types';\n\n\nexport function* clearCartOnSignOut(){\n    yield put(clearCart());\n}\n\nexport function* getFirebaseCart(action){\n    //Este script ya fue ejecutado en la primera pasada\n    //yield addCart();\n    yield console.log(\"Estoy recibiendo como parametro : \",action);\n    const {cart} = yield getUserCart(action.payload);\n    console.log(\"Lo que estoy recibiendo como cart es : \",cart);\n    yield put(setUserCart(cart));\n    yield console.log(\"termine mi operacion\");\n}\n\nexport function* onGetCart(){\n    const action = yield takeLatest(CartActionTypes.GET_CART_FROM_FIREBASE,getFirebaseCart);\n}\n\nexport function* saveCart(){\n    console.log(\"Quiero ver si llego a saveCart\");\n    const user = yield selectCartItems();\n    console.log(\"Estoy recibiendo como userid : \",user);  \n    const cart = selectCartItems();\n    console.log(\"Estoy recibiendo como carro : \",cart);\n    const toAdd = {cart:cart,id:user.id};\n    console.log(\"Estoy por insertar\",toAdd);\n    writeUserCart(user.id,toAdd);\n}\n\nexport function* catchSignOut(action){\n    console.log(\"Estoy agarrando bien esto\");\n    //Tengo que grabar en la base de datos los datos del carrito...\n    yield saveCart();\n    yield clearCartOnSignOut();\n   \n    \n}\n\nexport function* onSignOutSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,catchSignOut);\n}\n\n\nexport function* cartSagas() {\n    yield(all([call(onSignOutSuccess),call(onGetCart)]));\n}"]},"metadata":{},"sourceType":"module"}