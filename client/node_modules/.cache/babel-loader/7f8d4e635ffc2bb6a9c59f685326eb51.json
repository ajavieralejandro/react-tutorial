{"ast":null,"code":"import _regeneratorRuntime from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyA5cFMfRj0MYKuYMjOVd8KOKBNB_o-cSfA\",\n  authDomain: \"crwn-db-66998.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-66998.firebaseio.com\",\n  projectId: \"crwn-db-66998\",\n  storageBucket: \"crwn-db-66998.appspot.com\",\n  messagingSenderId: \"317210629966\",\n  appId: \"1:317210629966:web:a6192da12373d3f7ffb01f\",\n  measurementId: \"G-BPEJHFL92X\"\n};\nexport var createUserProfileDocument = function createUserProfileDocument(userAuth, additionalData) {\n  var userRef, snapShot, displayName, email, createdAt;\n  return _regeneratorRuntime.async(function createUserProfileDocument$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (userAuth) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(userRef.get());\n\n        case 5:\n          snapShot = _context.sent;\n          console.log(\"El snapShot que estoy recibiendo es : \", snapShot);\n\n          if (snapShot.exists) {\n            _context.next = 18;\n            break;\n          }\n\n          displayName = userAuth.displayName, email = userAuth.email;\n          createdAt = new Date();\n          _context.prev = 10;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(userRef.set(_objectSpread({\n            displayName: displayName,\n            email: email,\n            createdAt: createdAt\n          }, additionalData)));\n\n        case 13:\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](10);\n          console.log(\"Error creating user...\", _context.t0.message);\n\n        case 18:\n          return _context.abrupt(\"return\", userRef);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[10, 15]]);\n}; //Insercion en la base de datos\n\n/*\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  //Asegura que las inserciones en la base de datos sean completas\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const docRef = collectionRef.doc();\n    batch.set(docRef, obj);\n  });\n  return await batch.commit();\n};\n*/\n\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  console.log(\"Estoy llegando aqui con : \");\n  console.log(collections);\n  var TransformedCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return TransformedCollection.reduce(function (acumulator, collection) {\n    acumulator[collection.title.toLowerCase()] = collection;\n    return acumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport var auth = firebase.auth(); //Sign in with google...\n\nexport var firestore = firebase.firestore();\nexport var googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleProvider);\n};\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport var addCart = function addCart() {\n  //Arreglo de usuarios\n  var usersArray = []; //De esta manera recorro los usuarios en la coleccioón \n\n  firestore.collection('users').get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      var _doc$data2 = doc.data(),\n          displayName = _doc$data2.displayName,\n          createAt = _doc$data2.createAt,\n          email = _doc$data2.email;\n\n      usersArray.push({\n        id: doc.id,\n        cart: null\n      });\n    });\n  });\n  console.log(\"El arreglo es : \", usersArray);\n  usersArray.forEach(function (obj) {\n    console.log(\"todo sale bien :\", obj);\n  });\n  writeUserData(usersArray); //console.log(\"el resultado del script es : \",aux);\n};\n\nfunction writeUserData(objectsToAdd) {\n  var collectionRef, batch, newDocRef;\n  return _regeneratorRuntime.async(function writeUserData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"Estoy recibiendo como arreglo : \", objectsToAdd);\n          collectionRef = firestore.collection(\"carts\");\n          batch = firestore.batch();\n          newDocRef = collectionRef.doc(); //quiero insertar un nuevo objeto en la colección \n\n          batch.set(newDocRef, {\n            hola: \"hola cipayo\"\n          });\n          /*await batch.commit().then(result => {\n            console.log('Transaction success!');\n          }).catch(err => {\n            console.log('Transaction failure:', err);\n          });*/\n\n          objectsToAdd.forEach(function (obj) {\n            console.log(\"Estoy queriendo insertar \", obj);\n            var newDocRef = collectionRef.doc(obj.id);\n            batch.set(newDocRef, obj);\n          });\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(batch.commit().then(function (result) {\n            console.log('Transaction success!');\n          }).catch(function (err) {\n            console.log('Transaction failure:', err);\n          }));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n\nexport default firebase;","map":{"version":3,"sources":["/Users/javieralejandroamorosigomez/Desktop/Javier/Proyectos/react/react-tutorial/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","console","log","exists","displayName","email","createdAt","Date","set","message","convertCollectionsSnapshotToMap","collections","TransformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acumulator","collection","initializeApp","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","addCart","usersArray","then","querySnapshot","forEach","createAt","push","cart","obj","writeUserData","objectsToAdd","collectionRef","batch","newDocRef","hola","commit","result","catch","err"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\n\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyA5cFMfRj0MYKuYMjOVd8KOKBNB_o-cSfA\",\n  authDomain: \"crwn-db-66998.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-66998.firebaseio.com\",\n  projectId: \"crwn-db-66998\",\n  storageBucket: \"crwn-db-66998.appspot.com\",\n  messagingSenderId: \"317210629966\",\n  appId: \"1:317210629966:web:a6192da12373d3f7ffb01f\",\n  measurementId: \"G-BPEJHFL92X\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  //Si no hay ningun usuario autentificado no hago nada\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  console.log(\"El snapShot que estoy recibiendo es : \",snapShot);\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user...\", error.message);\n    }\n  }\n\n  //si esta autentificado tengo que preguntar si esta registrado en la base de datos...\n  return userRef;\n};\n\n//Insercion en la base de datos\n/*\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  //Asegura que las inserciones en la base de datos sean completas\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const docRef = collectionRef.doc();\n    batch.set(docRef, obj);\n  });\n  return await batch.commit();\n};\n*/\n\nexport const convertCollectionsSnapshotToMap= (collections)=>{\n  console.log(\"Estoy llegando aqui con : \");\n  console.log(collections); \n  \n  const TransformedCollection = collections.docs.map(\n    doc => {\n      const {title,items} = doc.data();\n      return {\n        routeName : encodeURI(title.toLowerCase()),\n        id : doc.id,\n        title,\n        items\n      }\n    }\n  )\n\n  return TransformedCollection.reduce((acumulator,collection)=>{\n    acumulator[collection.title.toLowerCase()]=collection;\n      return acumulator;\n  },{});\n\n\n}\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\n//Sign in with google...\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const addCart = () =>{\n  //Arreglo de usuarios\n  const usersArray = [];\n  //De esta manera recorro los usuarios en la coleccioón \n  firestore.collection('users')\n  .get()\n  .then(function(querySnapshot){\n    querySnapshot.forEach(function(doc){\n      const {displayName,createAt,email} = doc.data();\n      usersArray.push({id: doc.id,cart : null})\n    })\n  });\n  console.log(\"El arreglo es : \",usersArray);\n  usersArray.forEach(obj=>{\n    console.log(\"todo sale bien :\",obj);\n  })\n  writeUserData(usersArray);\n  //console.log(\"el resultado del script es : \",aux);\n\n}\n\nasync function writeUserData(objectsToAdd){\n  console.log(\"Estoy recibiendo como arreglo : \",objectsToAdd);\n  const collectionRef = firestore.collection(\"carts\");\n  const batch = firestore.batch();\n \n\n  const newDocRef = collectionRef.doc();\n  //quiero insertar un nuevo objeto en la colección \n  batch.set(newDocRef,{hola:\"hola cipayo\"});\n  /*await batch.commit().then(result => {\n    console.log('Transaction success!');\n  }).catch(err => {\n    console.log('Transaction failure:', err);\n  });*/\n\n  objectsToAdd.forEach(obj =>{\n    console.log(\"Estoy queriendo insertar \",obj);\n    const newDocRef = collectionRef.doc(obj.id);\n    batch.set(newDocRef,obj);\n  });\n  await batch.commit().then(result => {\n    console.log('Transaction success!');\n  }).catch(err => {\n    console.log('Transaction failure:', err);\n  });\n}\n\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}